{"message":"unused import: `number`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":180,"byte_end":186,"line_start":6,"line_end":6,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":178,"byte_end":186,"line_start":6,"line_end":6,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `number`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:6:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::int::{none, number};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `crate::value::boolean::boolean`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":227,"byte_end":257,"line_start":8,"line_end":8,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::value::boolean::boolean;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":223,"byte_end":258,"line_start":8,"line_end":8,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use crate::value::boolean::boolean;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::boolean::boolean`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::boolean::boolean;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `super::panic_if_is_outside_std`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":346,"byte_end":376,"line_start":10,"line_end":10,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use super::panic_if_is_outside_std;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":342,"byte_end":377,"line_start":10,"line_end":10,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use super::panic_if_is_outside_std;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::panic_if_is_outside_std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::panic_if_is_outside_std;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::get_impl_if_exist`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":154,"byte_end":178,"line_start":6,"line_end":6,"column_start":5,"column_end":29,"is_primary":true,"text":[{"text":"use crate::get_impl_if_exist;","highlight_start":5,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":150,"byte_end":179,"line_start":6,"line_end":6,"column_start":1,"column_end":30,"is_primary":true,"text":[{"text":"use crate::get_impl_if_exist;","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::get_impl_if_exist`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::get_impl_if_exist;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `none`, `number`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":204,"byte_end":208,"line_start":7,"line_end":7,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":210,"byte_end":216,"line_start":7,"line_end":7,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":180,"byte_end":218,"line_start":7,"line_end":7,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `none`, `number`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:7:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::int::{none, number};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::value::string::string`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":223,"byte_end":251,"line_start":8,"line_end":8,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use crate::value::string::string;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":219,"byte_end":252,"line_start":8,"line_end":8,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use crate::value::string::string;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::string::string`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::string::string;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `super::panic_if_is_outside_std`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":376,"byte_end":406,"line_start":11,"line_end":11,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use super::panic_if_is_outside_std;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":372,"byte_end":407,"line_start":11,"line_end":11,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use super::panic_if_is_outside_std;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::panic_if_is_outside_std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse super::panic_if_is_outside_std;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `none`, `number`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":239,"byte_end":243,"line_start":7,"line_end":7,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":25,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":245,"byte_end":251,"line_start":7,"line_end":7,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":215,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `none`, `number`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs:7:25\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::int::{none, number};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::value::string::string`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":258,"byte_end":286,"line_start":8,"line_end":8,"column_start":5,"column_end":33,"is_primary":true,"text":[{"text":"use crate::value::string::string;","highlight_start":5,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":254,"byte_end":287,"line_start":8,"line_end":8,"column_start":1,"column_end":34,"is_primary":true,"text":[{"text":"use crate::value::string::string;","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::string::string`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs:8:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::string::string;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::value::boolean::boolean`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":292,"byte_end":322,"line_start":9,"line_end":9,"column_start":5,"column_end":35,"is_primary":true,"text":[{"text":"use crate::value::boolean::boolean;","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":288,"byte_end":323,"line_start":9,"line_end":9,"column_start":1,"column_end":36,"is_primary":true,"text":[{"text":"use crate::value::boolean::boolean;","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::boolean::boolean`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::boolean::boolean;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `call_function_with_vec`, `create`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":336,"byte_end":342,"line_start":10,"line_end":10,"column_start":13,"column_end":19,"is_primary":true,"text":[{"text":"use crate::{create, call_function_with_vec}; // File : src/builtin_function/mod.rs","highlight_start":13,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":344,"byte_end":366,"line_start":10,"line_end":10,"column_start":21,"column_end":43,"is_primary":true,"text":[{"text":"use crate::{create, call_function_with_vec}; // File : src/builtin_function/mod.rs","highlight_start":21,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":324,"byte_end":368,"line_start":10,"line_end":10,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"use crate::{create, call_function_with_vec}; // File : src/builtin_function/mod.rs","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `call_function_with_vec`, `create`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs:10:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::{create, call_function_with_vec}; // File : src/builtin_function/mod.rs\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::define_function`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":411,"byte_end":433,"line_start":11,"line_end":11,"column_start":5,"column_end":27,"is_primary":true,"text":[{"text":"use crate::define_function;","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs","byte_start":407,"byte_end":434,"line_start":11,"line_end":11,"column_start":1,"column_end":28,"is_primary":true,"text":[{"text":"use crate::define_function;","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::define_function`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/list_util.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::define_function;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `function`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs","byte_start":440,"byte_end":448,"line_start":13,"line_end":13,"column_start":27,"column_end":35,"is_primary":true,"text":[{"text":"use crate::value::{class, function, Value};","highlight_start":27,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs","byte_start":438,"byte_end":448,"line_start":13,"line_end":13,"column_start":25,"column_end":35,"is_primary":true,"text":[{"text":"use crate::value::{class, function, Value};","highlight_start":25,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `function`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs:13:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::{class, function, Value};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused macro definition: `import_rs_module`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs","byte_start":1433,"byte_end":1449,"line_start":50,"line_end":50,"column_start":14,"column_end":30,"is_primary":true,"text":[{"text":"macro_rules! import_rs_module {","highlight_start":14,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused macro definition: `import_rs_module`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs:50:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! import_rs_module {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}
{"message":"variant `INT_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1021,"byte_end":1029,"line_start":75,"line_end":75,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    INT_TYPE,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1021,"byte_end":1029,"line_start":75,"line_end":75,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    INT_TYPE,","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":"IntType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `INT_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lexer.rs:75:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    INT_TYPE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `IntType`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"message":"variant `STRING_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1035,"byte_end":1046,"line_start":76,"line_end":76,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    STRING_TYPE,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1035,"byte_end":1046,"line_start":76,"line_end":76,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    STRING_TYPE,","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":"StringType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `STRING_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lexer.rs:76:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    STRING_TYPE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `StringType`\u001b[0m\n\n"}
{"message":"variant `BOOL_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1052,"byte_end":1061,"line_start":77,"line_end":77,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    BOOL_TYPE,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1052,"byte_end":1061,"line_start":77,"line_end":77,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    BOOL_TYPE,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"BoolType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `BOOL_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lexer.rs:77:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    BOOL_TYPE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `BoolType`\u001b[0m\n\n"}
{"message":"variant `LIST_TYPE` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1067,"byte_end":1076,"line_start":78,"line_end":78,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    LIST_TYPE,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":1067,"byte_end":1076,"line_start":78,"line_end":78,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    LIST_TYPE,","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"ListType","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variant `LIST_TYPE` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lexer.rs:78:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    LIST_TYPE,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `ListType`\u001b[0m\n\n"}
{"message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":12604,"byte_end":12612,"line_start":427,"line_end":427,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lexer.rs","byte_start":12600,"byte_end":12613,"line_start":427,"line_end":427,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `super::*`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lexer.rs:427:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m427\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Token`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/parser/parser_stmt.rs","byte_start":160,"byte_end":165,"line_start":4,"line_end":4,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use crate::lexer::{Token, TokenType};","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/parser/parser_stmt.rs","byte_start":160,"byte_end":167,"line_start":4,"line_end":4,"column_start":20,"column_end":27,"is_primary":true,"text":[{"text":"use crate::lexer::{Token, TokenType};","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Token`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/parser/parser_stmt.rs:4:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::lexer::{Token, TokenType};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::call_function_with_vec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/function.rs","byte_start":436,"byte_end":465,"line_start":15,"line_end":15,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/function.rs","byte_start":432,"byte_end":466,"line_start":15,"line_end":15,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::call_function_with_vec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/function.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::call_function_with_vec;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `number`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":183,"byte_end":189,"line_start":6,"line_end":6,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":31,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":181,"byte_end":189,"line_start":6,"line_end":6,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"use crate::value::int::{none, number};","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `number`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:6:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::int::{none, number};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `LiteralType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":274,"byte_end":285,"line_start":8,"line_end":8,"column_start":40,"column_end":51,"is_primary":true,"text":[{"text":"use crate::ast::expr::{Expr, ExprType, LiteralType};","highlight_start":40,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":272,"byte_end":285,"line_start":8,"line_end":8,"column_start":38,"column_end":51,"is_primary":true,"text":[{"text":"use crate::ast::expr::{Expr, ExprType, LiteralType};","highlight_start":38,"highlight_end":51}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `LiteralType`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:8:40\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::ast::expr::{Expr, ExprType, LiteralType};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::value::function::BuiltinFunction`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":457,"byte_end":496,"line_start":14,"line_end":14,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":5,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":453,"byte_end":497,"line_start":14,"line_end":14,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::function::BuiltinFunction`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::function::BuiltinFunction;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::call_function_with_vec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":566,"byte_end":595,"line_start":17,"line_end":17,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":562,"byte_end":596,"line_start":17,"line_end":17,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::call_function_with_vec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::call_function_with_vec;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::builtin_function::panic_if_is_outside_std`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":620,"byte_end":668,"line_start":19,"line_end":19,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"use crate::builtin_function::panic_if_is_outside_std;","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":616,"byte_end":669,"line_start":19,"line_end":19,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::builtin_function::panic_if_is_outside_std;","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::builtin_function::panic_if_is_outside_std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::builtin_function::panic_if_is_outside_std;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `push` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3565,"byte_end":3569,"line_start":139,"line_end":139,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    \"push\" => push(this: Object, value: Object) {","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3565,"byte_end":3569,"line_start":139,"line_end":139,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    \"push\" => push(this: Object, value: Object) {","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":"Push","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `push` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:139:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"push\" => push(this: Object, value: Object) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Push`\u001b[0m\n\n"}
{"message":"type `extend` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3773,"byte_end":3779,"line_start":147,"line_end":147,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    \"extend\" => extend() {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3773,"byte_end":3779,"line_start":147,"line_end":147,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    \"extend\" => extend() {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"Extend","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `extend` should have an upper camel case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:147:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"extend\" => extend() {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Extend`\u001b[0m\n\n"}
{"message":"unused import: `crate::value::function::BuiltinFunction`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":473,"byte_end":512,"line_start":14,"line_end":14,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":5,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":469,"byte_end":513,"line_start":14,"line_end":14,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::function::BuiltinFunction`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::function::BuiltinFunction;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::call_function_with_vec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":597,"byte_end":626,"line_start":18,"line_end":18,"column_start":5,"column_end":34,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":5,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":593,"byte_end":627,"line_start":18,"line_end":18,"column_start":1,"column_end":35,"is_primary":true,"text":[{"text":"use crate::call_function_with_vec;","highlight_start":1,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::call_function_with_vec`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::call_function_with_vec;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::builtin_function::panic_if_is_outside_std`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":632,"byte_end":680,"line_start":19,"line_end":19,"column_start":5,"column_end":53,"is_primary":true,"text":[{"text":"use crate::builtin_function::panic_if_is_outside_std;","highlight_start":5,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":628,"byte_end":681,"line_start":19,"line_end":19,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"use crate::builtin_function::panic_if_is_outside_std;","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::builtin_function::panic_if_is_outside_std`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:19:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::builtin_function::panic_if_is_outside_std;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `get`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/struct_type.rs","byte_start":121,"byte_end":124,"line_start":4,"line_end":4,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"use crate::value::{get, Implementation, Type};","highlight_start":20,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/struct_type.rs","byte_start":121,"byte_end":126,"line_start":4,"line_end":4,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"use crate::value::{get, Implementation, Type};","highlight_start":20,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `get`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/struct_type.rs:4:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::{get, Implementation, Type};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::value::function::BuiltinFunction`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":324,"byte_end":363,"line_start":10,"line_end":10,"column_start":5,"column_end":44,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":5,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":320,"byte_end":364,"line_start":10,"line_end":10,"column_start":1,"column_end":45,"is_primary":true,"text":[{"text":"use crate::value::function::BuiltinFunction;","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::function::BuiltinFunction`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/string.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::function::BuiltinFunction;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"type `len_i32` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1970,"byte_end":1977,"line_start":72,"line_end":72,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1970,"byte_end":1977,"line_start":72,"line_end":72,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":"LenI32","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `len_i32` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/string.rs:72:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"len\" => len_i32(this: Object) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `LenI32`\u001b[0m\n\n"}
{"message":"unused import: `crate::errors::Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/boolean.rs","byte_start":145,"byte_end":165,"line_start":5,"line_end":5,"column_start":5,"column_end":25,"is_primary":true,"text":[{"text":"use crate::errors::Error;","highlight_start":5,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/value/boolean.rs","byte_start":141,"byte_end":166,"line_start":5,"line_end":5,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"use crate::errors::Error;","highlight_start":1,"highlight_end":26}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::errors::Error`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/boolean.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::errors::Error;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `crate::lexer::TokenType`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/c_compiler/mod.rs","byte_start":151,"byte_end":174,"line_start":6,"line_end":6,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"use crate::lexer::TokenType;","highlight_start":5,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/c_compiler/mod.rs","byte_start":147,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":29,"is_primary":true,"text":[{"text":"use crate::lexer::TokenType;","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::lexer::TokenType`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/c_compiler/mod.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::lexer::TokenType;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"the trait bound `i32: From<&mut Vec<Object>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2434,"byte_end":2438,"line_start":100,"line_end":100,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"            $($vec.into()),*","highlight_start":20,"highlight_end":24}],"label":"the trait `From<&mut Vec<Object>>` is not implemented for `i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `From<T>`:\n  <i32 as From<NonZeroI32>>\n  <i32 as From<bool>>\n  <i32 as From<i16>>\n  <i32 as From<i8>>\n  <i32 as From<u16>>\n  <i32 as From<u8>>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `&mut Vec<Object>` to implement `Into<i32>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `i32: From<&mut Vec<Object>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:100:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            $($vec.into()),*\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `From<&mut Vec<Object>>` is not implemented for `i32`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:172:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(i32, StdLibInt, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `From<T>`:\u001b[0m\n\u001b[0m              <i32 as From<NonZeroI32>>\u001b[0m\n\u001b[0m              <i32 as From<bool>>\u001b[0m\n\u001b[0m              <i32 as From<i16>>\u001b[0m\n\u001b[0m              <i32 as From<i8>>\u001b[0m\n\u001b[0m              <i32 as From<u16>>\u001b[0m\n\u001b[0m              <i32 as From<u8>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `&mut Vec<Object>` to implement `Into<i32>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2412,"byte_end":5544,"line_start":99,"line_end":182,"column_start":37,"column_end":78,"is_primary":true,"text":[{"text":"            $this.into_mut().unwrap(),","highlight_start":37,"highlight_end":39},{"text":"            $($vec.into()),*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":31},{"text":"    ($name:ident($($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":98},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name ($($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":108},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into() {","highlight_start":1,"highlight_end":43},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":1,"highlight_end":80},{"text":"                result","highlight_start":1,"highlight_end":23},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        create!($name);","highlight_start":1,"highlight_end":24},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":29},{"text":"    ($name:ident(this:$this:ty, $($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":113},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":77},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, _args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":109},{"text":"                panic!(\"You can't call a method directly. Use the dot notation instead.\");","highlight_start":1,"highlight_end":91},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn method(&self, interpreter: &mut Interpreter, this: &mut Object, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":128},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into_mut() {","highlight_start":1,"highlight_end":47},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":1,"highlight_end":78}],"label":"expected `&mut i32`, found `&mut Vec<Object>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5526,"byte_end":5538,"line_start":182,"line_end":182,"column_start":60,"column_end":72,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":60,"highlight_end":72}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected mutable reference `&mut i32`\n   found mutable reference `&mut Vec<Object>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":4145,"byte_end":4161,"line_start":153,"line_end":153,"column_start":27,"column_end":43,"is_primary":false,"text":[{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":27,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4625,"byte_end":4629,"line_start":173,"line_end":173,"column_start":15,"column_end":19,"is_primary":true,"text":[{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":15,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:99:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m            $this.into_mut().unwrap(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m______________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m            $($vec.into()),*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m                // Call the function and convert the return value to an Object\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________________________________________________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&mut i32`, found `&mut Vec<Object>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:172:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(i32, StdLibInt, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut i32\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut Vec<Object>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:173:15\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:153:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `define_method` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2412,"byte_end":5544,"line_start":99,"line_end":182,"column_start":37,"column_end":78,"is_primary":true,"text":[{"text":"            $this.into_mut().unwrap(),","highlight_start":37,"highlight_end":39},{"text":"            $($vec.into()),*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":31},{"text":"    ($name:ident($($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":98},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name ($($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":108},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into() {","highlight_start":1,"highlight_end":43},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":1,"highlight_end":80},{"text":"                result","highlight_start":1,"highlight_end":23},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        create!($name);","highlight_start":1,"highlight_end":24},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":29},{"text":"    ($name:ident(this:$this:ty, $($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":113},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":77},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, _args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":109},{"text":"                panic!(\"You can't call a method directly. Use the dot notation instead.\");","highlight_start":1,"highlight_end":91},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn method(&self, interpreter: &mut Interpreter, this: &mut Object, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":128},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into_mut() {","highlight_start":1,"highlight_end":47},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":1,"highlight_end":78}],"label":"expected `&mut i32`, found `&mut Vec<Object>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5526,"byte_end":5538,"line_start":182,"line_end":182,"column_start":60,"column_end":72,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":60,"highlight_end":72}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected mutable reference `&mut i32`\n   found mutable reference `&mut Vec<Object>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":4145,"byte_end":4161,"line_start":153,"line_end":153,"column_start":27,"column_end":43,"is_primary":false,"text":[{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":27,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4684,"byte_end":4692,"line_start":176,"line_end":176,"column_start":20,"column_end":28,"is_primary":true,"text":[{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":20,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:99:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m            $this.into_mut().unwrap(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m______________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m            $($vec.into()),*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m                // Call the function and convert the return value to an Object\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____________________________________________________________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&mut i32`, found `&mut Vec<Object>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:172:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(i32, StdLibInt, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut i32\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut Vec<Object>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:176:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m176\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"to_string\" => ToString(this: Object) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:153:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `define_method` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2412,"byte_end":5544,"line_start":99,"line_end":182,"column_start":37,"column_end":78,"is_primary":true,"text":[{"text":"            $this.into_mut().unwrap(),","highlight_start":37,"highlight_end":39},{"text":"            $($vec.into()),*","highlight_start":1,"highlight_end":29},{"text":"        );","highlight_start":1,"highlight_end":11},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":31},{"text":"    ($name:ident($($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":98},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name ($($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":59},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":108},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into() {","highlight_start":1,"highlight_end":43},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":1,"highlight_end":80},{"text":"                result","highlight_start":1,"highlight_end":23},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        create!($name);","highlight_start":1,"highlight_end":24},{"text":"    };","highlight_start":1,"highlight_end":7},{"text":"}","highlight_start":1,"highlight_end":2},{"text":"","highlight_start":1,"highlight_end":1},{"text":"#[macro_export]","highlight_start":1,"highlight_end":16},{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":29},{"text":"    ($name:ident(this:$this:ty, $($arg:ident : $ty:ty),*) $body:block, function_name = $function_name:expr) => {","highlight_start":1,"highlight_end":113},{"text":"        pub struct $name;","highlight_start":1,"highlight_end":26},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":1,"highlight_end":77},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Callable for $name {","highlight_start":1,"highlight_end":34},{"text":"            fn call(&self, _interpreter: &mut Interpreter, _args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":109},{"text":"                panic!(\"You can't call a method directly. Use the dot notation instead.\");","highlight_start":1,"highlight_end":91},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn method(&self, interpreter: &mut Interpreter, this: &mut Object, args: &mut Vec<Object>, _file: &str) -> Object {","highlight_start":1,"highlight_end":128},{"text":"                let mut arg_iter = std::iter::repeat(()).zip(args.iter_mut());","highlight_start":1,"highlight_end":79},{"text":"                let mut next_arg = arg_iter.next();","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                $(let $arg = loop {","highlight_start":1,"highlight_end":36},{"text":"                    let arg = match next_arg {","highlight_start":1,"highlight_end":47},{"text":"                        Some(((), arg)) => arg,","highlight_start":1,"highlight_end":48},{"text":"                        None => panic!(\"Missing argument for function {}\", stringify!($name)),","highlight_start":1,"highlight_end":95},{"text":"                    };","highlight_start":1,"highlight_end":23},{"text":"                    let arg_obj = arg.clone();","highlight_start":1,"highlight_end":47},{"text":"                    next_arg = arg_iter.next();","highlight_start":1,"highlight_end":48},{"text":"                    match arg_obj.into_mut() {","highlight_start":1,"highlight_end":47},{"text":"                        Some(val) => break val,","highlight_start":1,"highlight_end":48},{"text":"                        None => {},","highlight_start":1,"highlight_end":36},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                };)*","highlight_start":1,"highlight_end":21},{"text":"                if let Some(((), _)) = next_arg {","highlight_start":1,"highlight_end":50},{"text":"                    panic!(\"Too many arguments for function {}\", stringify!($name));","highlight_start":1,"highlight_end":85},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                // Call the function and convert the return value to an Object","highlight_start":1,"highlight_end":79},{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":1,"highlight_end":78}],"label":"expected `&mut String`, found `&mut Vec<Object>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1916,"byte_end":2020,"line_start":71,"line_end":75,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(String, StdLibString, {","highlight_start":1,"highlight_end":41},{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":1,"highlight_end":37},{"text":"        number(0)","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5526,"byte_end":5538,"line_start":182,"line_end":182,"column_start":60,"column_end":72,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":60,"highlight_end":72}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1916,"byte_end":2020,"line_start":71,"line_end":75,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(String, StdLibString, {","highlight_start":1,"highlight_end":41},{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":1,"highlight_end":37},{"text":"        number(0)","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected mutable reference `&mut String`\n   found mutable reference `&mut Vec<Object>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":4145,"byte_end":4161,"line_start":153,"line_end":153,"column_start":27,"column_end":43,"is_primary":false,"text":[{"text":"            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body","highlight_start":27,"highlight_end":43}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1916,"byte_end":2020,"line_start":71,"line_end":75,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(String, StdLibString, {","highlight_start":1,"highlight_end":41},{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":1,"highlight_end":37},{"text":"        number(0)","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1970,"byte_end":1977,"line_start":72,"line_end":72,"column_start":14,"column_end":21,"is_primary":true,"text":[{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":14,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:99:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            $this.into_mut().unwrap(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____________________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            $($vec.into()),*\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                // Call the function and convert the return value to an Object\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m182\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________________________________________________\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_____^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&mut String`, found `&mut Vec<Object>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this function are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/string.rs:71:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(String, StdLibString, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"len\" => len_i32(this: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        number(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut String\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found mutable reference `\u001b[0m\u001b[0m\u001b[1m&mut Vec<Object>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/string.rs:72:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"len\" => len_i32(this: Object) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:153:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            pub fn $name (this: &mut $this, $($arg : $ty),*) -> Object $body\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `define_method` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"unused import: `crate::value::get::Getter`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs","byte_start":500,"byte_end":525,"line_start":15,"line_end":15,"column_start":5,"column_end":30,"is_primary":true,"text":[{"text":"use crate::value::get::Getter;","highlight_start":5,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `crate::value::get::Getter`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/interpreter/mod.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::value::get::Getter;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"aborting due to 4 previous errors; 37 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 4 previous errors; 37 warnings emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0308.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0308.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
{"future_incompat_report":[{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2248,"byte_end":2249,"line_start":91,"line_end":91,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3778,"byte_end":3827,"line_start":136,"line_end":136,"column_start":30,"column_end":79,"is_primary":false,"text":[{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":30,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":482,"byte_end":581,"line_start":15,"line_end":18,"column_start":1,"column_end":28,"is_primary":false,"text":[{"text":"define_function!(Print(msg: String) {","highlight_start":1,"highlight_end":38},{"text":"    print!(\"{}\", msg);","highlight_start":1,"highlight_end":23},{"text":"    none()","highlight_start":1,"highlight_end":11},{"text":"},function_name = \"_print\");","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"define_function!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2481,"byte_end":2509,"line_start":106,"line_end":106,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"call_function_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2118,"byte_end":2153,"line_start":87,"line_end":87,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! call_function_with_vec {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdefine_function!(Print(msg: String) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    print!(\"{}\", msg);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m},function_name = \"_print\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `call_function_with_vec` which comes from the expansion of the macro `define_function` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2248,"byte_end":2249,"line_start":91,"line_end":91,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3778,"byte_end":3827,"line_start":136,"line_end":136,"column_start":30,"column_end":79,"is_primary":false,"text":[{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":30,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":584,"byte_end":690,"line_start":20,"line_end":23,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"define_function!(Println(msg: String) {","highlight_start":1,"highlight_end":40},{"text":"    println!(\"{}\", msg);","highlight_start":1,"highlight_end":25},{"text":"    none()","highlight_start":1,"highlight_end":11},{"text":"}, function_name = \"_println\");","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"define_function!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2481,"byte_end":2509,"line_start":106,"line_end":106,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"call_function_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2118,"byte_end":2153,"line_start":87,"line_end":87,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! call_function_with_vec {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:20:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdefine_function!(Println(msg: String) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{}\", msg);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}, function_name = \"_println\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `call_function_with_vec` which comes from the expansion of the macro `define_function` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2248,"byte_end":2249,"line_start":91,"line_end":91,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3778,"byte_end":3827,"line_start":136,"line_end":136,"column_start":30,"column_end":79,"is_primary":false,"text":[{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":30,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs","byte_start":693,"byte_end":905,"line_start":25,"line_end":30,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"define_function!(Input(prompt: String) {","highlight_start":1,"highlight_end":41},{"text":"    println!(\"{}\", prompt);","highlight_start":1,"highlight_end":28},{"text":"    let mut input = String::new();","highlight_start":1,"highlight_end":35},{"text":"    std::io::stdin().read_line(&mut input).unwrap();","highlight_start":1,"highlight_end":53},{"text":"    string(input.as_str())","highlight_start":1,"highlight_end":27},{"text":"}, function_name = \"_input\");","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"define_function!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2481,"byte_end":2509,"line_start":106,"line_end":106,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"call_function_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2118,"byte_end":2153,"line_start":87,"line_end":87,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! call_function_with_vec {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/io.rs:25:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdefine_function!(Input(prompt: String) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{}\", prompt);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut input = String::new();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    std::io::stdin().read_line(&mut input).unwrap();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    string(input.as_str())\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}, function_name = \"_input\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|____________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `call_function_with_vec` which comes from the expansion of the macro `define_function` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2248,"byte_end":2249,"line_start":91,"line_end":91,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3778,"byte_end":3827,"line_start":136,"line_end":136,"column_start":30,"column_end":79,"is_primary":false,"text":[{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":30,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":438,"byte_end":659,"line_start":15,"line_end":21,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"define_function!(IsEqual(left: Object, right: Object) {","highlight_start":1,"highlight_end":56},{"text":"    if left.type_ != right.type_ {","highlight_start":1,"highlight_end":35},{"text":"        return boolean(false)","highlight_start":1,"highlight_end":30},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        return boolean(left.value == right.value)","highlight_start":1,"highlight_end":50},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}, function_name = \"_is_equal\");","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"define_function!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2481,"byte_end":2509,"line_start":106,"line_end":106,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"call_function_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2118,"byte_end":2153,"line_start":87,"line_end":87,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! call_function_with_vec {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:15:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdefine_function!(IsEqual(left: Object, right: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if left.type_ != right.type_ {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return boolean(false)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return boolean(left.value == right.value)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}, function_name = \"_is_equal\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_______________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `call_function_with_vec` which comes from the expansion of the macro `define_function` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2248,"byte_end":2249,"line_start":91,"line_end":91,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3778,"byte_end":3827,"line_start":136,"line_end":136,"column_start":30,"column_end":79,"is_primary":false,"text":[{"text":"                let result = call_function_with_vec!($name::$name , $($arg),*);","highlight_start":30,"highlight_end":79}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs","byte_start":662,"byte_end":889,"line_start":23,"line_end":29,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"define_function!(IsNotEqual(left: Object, right: Object) {","highlight_start":1,"highlight_end":59},{"text":"    if left.type_ != right.type_ {","highlight_start":1,"highlight_end":35},{"text":"        return boolean(true)","highlight_start":1,"highlight_end":29},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        return boolean(left.value != right.value)","highlight_start":1,"highlight_end":50},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}, function_name = \"_is_not_equal\");","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"define_function!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2481,"byte_end":2509,"line_start":106,"line_end":106,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! define_function {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"call_function_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2118,"byte_end":2153,"line_start":87,"line_end":87,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"macro_rules! call_function_with_vec {","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:91:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/cmp.rs:23:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdefine_function!(IsNotEqual(left: Object, right: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if left.type_ != right.type_ {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return boolean(true)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return boolean(left.value != right.value)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}, function_name = \"_is_not_equal\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|___________________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `call_function_with_vec` which comes from the expansion of the macro `define_function` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2453,"byte_end":2454,"line_start":101,"line_end":101,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3514,"byte_end":3808,"line_start":138,"line_end":151,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"register_stdlib!(List, StdLibList, {","highlight_start":1,"highlight_end":37},{"text":"    \"push\" => push(this: Object, value: Object) {","highlight_start":1,"highlight_end":50},{"text":"        if let Value::List(ref mut l) = this.value {","highlight_start":1,"highlight_end":53},{"text":"            l.push(value);","highlight_start":1,"highlight_end":27},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"extend\" => extend() {","highlight_start":1,"highlight_end":27},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(List, StdLibList, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"push\" => push(this: Object, value: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Value::List(ref mut l) = this.value {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            l.push(value);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2453,"byte_end":2454,"line_start":101,"line_end":101,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/list.rs","byte_start":3514,"byte_end":3808,"line_start":138,"line_end":151,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"register_stdlib!(List, StdLibList, {","highlight_start":1,"highlight_end":37},{"text":"    \"push\" => push(this: Object, value: Object) {","highlight_start":1,"highlight_end":50},{"text":"        if let Value::List(ref mut l) = this.value {","highlight_start":1,"highlight_end":53},{"text":"            l.push(value);","highlight_start":1,"highlight_end":27},{"text":"        } else {","highlight_start":1,"highlight_end":17},{"text":"            unreachable!()","highlight_start":1,"highlight_end":27},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"extend\" => extend() {","highlight_start":1,"highlight_end":27},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2},{"text":");","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/list.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(List, StdLibList, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m139\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"push\" => push(this: Object, value: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m140\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        if let Value::List(ref mut l) = this.value {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m141\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            l.push(value);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2453,"byte_end":2454,"line_start":101,"line_end":101,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:172:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(i32, StdLibInt, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2453,"byte_end":2454,"line_start":101,"line_end":101,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/int.rs","byte_start":4576,"byte_end":4732,"line_start":172,"line_end":179,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(i32, StdLibInt, {","highlight_start":1,"highlight_end":35},{"text":"    \"sqrt\" => Sqrt(this: i32) {","highlight_start":1,"highlight_end":32},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    },","highlight_start":1,"highlight_end":7},{"text":"    \"to_string\" => ToString(this: Object) {","highlight_start":1,"highlight_end":44},{"text":"        none()","highlight_start":1,"highlight_end":15},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/int.rs:172:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m172\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(i32, StdLibInt, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m173\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"sqrt\" => Sqrt(this: i32) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        none()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m175\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    },\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2453,"byte_end":2454,"line_start":101,"line_end":101,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        );","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":5496,"byte_end":5556,"line_start":182,"line_end":182,"column_start":30,"column_end":90,"is_primary":false,"text":[{"text":"                let result = $crate::call_method_with_vec!($name::$name, this, $($arg),*);","highlight_start":30,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":1033,"byte_end":1123,"line_start":40,"line_end":40,"column_start":33,"column_end":123,"is_primary":false,"text":[{"text":"                                define_method!($name(this: $type_, $($arg : $ty),*) $body, function_name = $std_func_name);","highlight_start":33,"highlight_end":123}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/string.rs","byte_start":1916,"byte_end":2020,"line_start":71,"line_end":75,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"register_stdlib!(String, StdLibString, {","highlight_start":1,"highlight_end":41},{"text":"    \"len\" => len_i32(this: Object) {","highlight_start":1,"highlight_end":37},{"text":"        number(0)","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"});","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"register_stdlib!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/value/stdlib.rs","byte_start":510,"byte_end":538,"line_start":32,"line_end":32,"column_start":1,"column_end":29,"is_primary":false,"text":[{"text":"macro_rules! register_stdlib {","highlight_start":1,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"define_method!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":3929,"byte_end":3955,"line_start":148,"line_end":148,"column_start":1,"column_end":27,"is_primary":false,"text":[{"text":"macro_rules! define_method {","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::call_method_with_vec!","def_site_span":{"file_name":"/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs","byte_start":2276,"byte_end":2309,"line_start":96,"line_end":96,"column_start":1,"column_end":34,"is_primary":false,"text":[{"text":"macro_rules! call_method_with_vec {","highlight_start":1,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"/Users/antoine/Documents/popper-lang/src/lib.rs","byte_start":35,"byte_end":71,"line_start":2,"line_end":2,"column_start":10,"column_end":46,"is_primary":true,"text":[{"text":"#![allow(semicolon_in_expressions_from_macros)]","highlight_start":10,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/builtin_function/mod.rs:101:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        );\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/value/string.rs:71:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m71\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mregister_stdlib!(String, StdLibString, {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m72\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"len\" => len_i32(this: Object) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m73\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        number(0)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m});\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/antoine/Documents/popper-lang/src/lib.rs:2:10\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m2\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![allow(semicolon_in_expressions_from_macros)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::call_method_with_vec` which comes from the expansion of the macro `register_stdlib` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
